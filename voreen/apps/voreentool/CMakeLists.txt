CMAKE_MINIMUM_REQUIRED(VERSION 3.16.3 FATAL_ERROR)
PROJECT(voreentool)
INCLUDE(../../cmake/commonconf.cmake)

MESSAGE(STATUS "Configuring VoreenTool Application")

SET(VRN_VOREENTOOL_SOURCES
    voreentool.cpp
)

SET(VRN_VOREENTOOL_HEADERS
)

# find Qt library
SET(VRN_QT_COMPONENTS Gui Widgets Svg)
IF(QT_USE_QTNETWORK)
    LIST(APPEND VRN_QT_COMPONENTS Network)
ENDIF()
FIND_PACKAGE(Qt5Core ${VRN_REQUIRED_QT_VERSION} REQUIRED)
FIND_PACKAGE(Qt5 COMPONENTS ${VRN_QT_COMPONENTS} REQUIRED)
# create list of libraries
set(QT_LIBRARIES Qt5::Core Qt5::Gui Qt5::Widgets Qt5::Svg ${QT5SVG_LIBRARIES})
set(QT_INCLUDE_DIRECTORIES ${Qt5Core_INCLUDES} ${Qt5Gui_INCLUDES} ${Qt5Widgets_INCLUDES}  ${Qt5Svg_INCLUDES})
IF(QT_USE_QTNETWORK)
    LIST(APPEND QT_LIBRARIES Qt5::Network)
    LIST(APPEND QT_INCLUDE_DIRECTORIES ${Qt5Network_INCLUDES})
ENDIF()

# Qt moc (currently not required)
#QT4_WRAP_CPP(VRN_VOREENTOOL_MOC_SOURCES ${VRN_VOREENTOOL_HEADERS})
#LIST(APPEND VRN_VOREENTOOL_SOURCES ${VRN_VOREENTOOL_HEADERS})
    
ADD_EXECUTABLE(voreentool 
    ${VRN_VOREENTOOL_SOURCES} ${VRN_VOREENTOOL_HEADERS} 
) 
ADD_DEFINITIONS(${VRN_DEFINITIONS} ${VRN_MODULE_DEFINITIONS})
INCLUDE_DIRECTORIES(${VRN_INCLUDE_DIRECTORIES})
TARGET_LINK_LIBRARIES(voreentool tgt voreen_core voreen_qt ${VRN_EXTERNAL_LIBRARIES})

# add Qt dependency to target
INCLUDE_DIRECTORIES(${QT_INCLUDE_DIRECTORIES})
ADD_DEFINITIONS(${QT_DEFINITIONS})
TARGET_LINK_LIBRARIES(voreentool ${QT_LIBRARIES})

# deployment
IF(VRN_ADD_INSTALL_TARGET)
    INSTALL(TARGETS voreentool
        RUNTIME DESTINATION .
    )
ENDIF()
